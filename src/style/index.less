// 设置背景颜色变量
@bg-cloor: #b7d4a8;
// 设置蛇颜色
@snake-color: #000;
// 食物颜色
@food-color: red;

// 清除默认样式
*{
  margin: 0;
  padding: 0;
  // 改变盒子模型计算方式
  box-sizing: border-box;
}

// 全局字体
body{
  font: bold 20px "Courier";
}

#main{
  // 宽
  width: 360px;
  // 高
  height: 420px;
  // 背景颜色
  background-color: @bg-cloor;
  // 居中
  margin: 100px auto;
  // 边框
  border: 10px solid black;
  // 边框倒角
  border-radius: 40px;

  // 开启弹性盒模型
  display: flex;

  // 设置主轴方向 ↓（自上向下垂直排列）
  flex-flow: column;
  // 设置侧轴对齐方式 → （水平居中）
  align-items: center;
  // 设置主轴对齐方式（四周空白平均分配）
  justify-content: space-around;

  // 游戏主窗口
  #stage{
    width: 304px;
    height: 304px;
    border: 2px solid black;
    // 开启相对定位
    position: relative;
    // 设置蛇样式（此处&>div表示给snake子div设置样式）
    #snake{
      &>div{
        width: 10px;
        height: 10px;
        background-color: @snake-color;
        // 蛇方框间隔必须是10px 否则会出现吃不到食物情况
        // 为避免蛇成为一个长黑条，设置边框颜色与背景颜色一致，蛇就变成一个一个方框拼接的
        border: 1px solid @bg-cloor;
        // 开启绝对定位
        position: absolute;
      }
    }

    // 设置食物
    &>#food{
      width: 10px;
      height: 10px;
      position: absolute;
      left: 40px;
      top: 100px;
      background-color: @bg-cloor;
      // 开启弹性盒
      display: flex;
      // 设置横轴row为主轴（row横,column纵），wrap 自动换行
      flex-flow: row wrap;
      // 设置主轴 和 侧轴的空白空间分配到元素之间
      justify-content: space-between;
      align-content: space-between;
      &>div{
        width: 4px;
        height: 4px;
        background-color: @food-color;
        // 45度旋转，变成小花形状
        transform: rotate(45deg);
      }
    }
  }
  // 记分牌
  #score-panel{
    width: 300px;
    // 开启弹性盒模型
    display: flex;
    // 空白居中
    justify-content: space-between;
  }
}



